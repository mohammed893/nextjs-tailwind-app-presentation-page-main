name: Deploy Next.js App to EC2 with Docker

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    environment: env
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to AWS ECR
        env:
          AWS_REGION: us-east-1
          AWS_ACCOUNT_ID: ${{ secrets.AWS_MY_ID }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build and push Docker image
        env:
          IMAGE_TAG: latest
          AWS_REGION: us-east-1
          AWS_ACCOUNT_ID: ${{ secrets.AWS_MY_ID }}
        run: |
          docker build -t nextjs-app:$IMAGE_TAG .
          docker tag nextjs-app:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/nextjs-app:$IMAGE_TAG
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/nextjs-app:$IMAGE_TAG

      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          debug: true
          script: |
            echo "Setting AWS credentials..."
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export AWS_REGION=us-east-1

            echo "Logging into AWS ECR..."
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_MY_ID }}.dkr.ecr.us-east-1.amazonaws.com

            echo "Pulling Docker image..."
            docker pull ${{ secrets.AWS_MY_ID }}.dkr.ecr.us-east-1.amazonaws.com/nextjs-app:latest

            echo "Stopping and removing existing container if it exists..."
            if [ "$(docker ps -q -f name=nextjs-app)" ]; then
              docker stop nextjs-app
            fi
            if [ "$(docker ps -a -q -f name=nextjs-app)" ]; then
              docker rm nextjs-app
            fi

            echo "Running new Docker container..."
            docker run --log-driver=awslogs --log-opt awslogs-region=us-east-1 --log-opt awslogs-group=docker-logs --log-opt awslogs-stream=nextjs-app-log -d --name nextjs-app -p 3000:3000 ${{ secrets.AWS_MY_ID }}.dkr.ecr.us-east-1.amazonaws.com/nextjs-app:latest

            echo "Removing unused Docker images"
            docker image prune -f